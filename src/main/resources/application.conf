akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  # Options: ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"

# http set
  http {
    client {
      //user-agent-header = akka-http/${akka.http.version}
      connecting-timeout = 60s
      idle-timeout = 60 s
      request-header-size-hint = 128
      log-unencrypted-network-bytes = off
    }

    host-connection-pool {
      # The maximum number of parallel connections that a connection pool to a
      # single host endpoint is allowed to establish. Must be greater than zero.
      max-connections = 256
      min-connections = 0

      # The maximum number of times failed requests are attempted again,
      # (if the request can be safely retried) before giving up and returning an error.
      # Set to zero to completely disable request retries.
      max-retries = 30
      max-open-requests = 256
      pipelining-limit = 1
      idle-timeout = 60 s
    }
  }
  serialization.protobuf {

    # Additional classes that are allowed even if they are not defined in `serialization-bindings`.
    # It can be exact class name or name of super class or interfaces (one level).
    # This is useful when a class is not used for serialization any more and therefore removed
    # from `serialization-bindings`, but should still be possible to deserialize.
    whitelist-class = [
      "com.google.protobuf.GeneratedMessage",
      "com.google.protobuf.GeneratedMessageV3",
      "scalapb.GeneratedMessageCompanion",
      "akka.protobuf.GeneratedMessage"
    ]
  }
}

my-dispatcher {
  tupe = "Dispatcher"
  executor = "thread-pool-executor"

  thread-pool-executor {
    core-pool-size-min = 2
    core-pool-size-factor = 2.0
    core-pool-size-max = 4

    max-pool-size-min = 2
    max-pool-size-factor = 2.0
    max-pool-size-max = 4

    task-queue-size = -1

    task-queue-type = "linked"

    keep-alive-time = 120s

    allo-core-timeout = on
  }
}